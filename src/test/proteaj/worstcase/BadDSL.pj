package worstcase;

dsl BadDSL {
  priority p0, p1 {
    p0 < PredefOperators.add < p1
  }

  static Identifier[p0] _%"\\p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*" (String name) {
    return new Identifier(name);
  }

  static <T, R, name: Identifier> R[p1] "let" name ":" T "=" _[p1] "in" _[p1] "tel" (T v, DSL1<T, name> |- R r) {
    return r.apply(new DSL1<T, name>(v));
  }

  static <T, R, name: Identifier> R[p1] "let" name ":" T "=" _[p1] "in" _[p1] "end" (T v, DSL2<T, name> |- R r) {
    return r.apply(new DSL2<T, name>(v));
  }
}

dsl DSL1 <V, name: Identifier> {
  DSL1 (V v) { this.v = v; }

  V[BadDSL.p0] name[BadDSL.p0] () { return v; }

  private V v;
}

dsl DSL2 <V, name: Identifier> {
  DSL2 (V v) { this.v = v; }

  V[BadDSL.p0] name[BadDSL.p0] () { return v; }

  private V v;
}

class Identifier {
  public Identifier (String name) { this.name = name; }
  public String getName() { return name; }
  private String name;
}