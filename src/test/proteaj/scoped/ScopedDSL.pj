package scoped;

dsl ScopedDSL {
  priority p0, p1, p2 { p0 > PredefOperators.add > p1 > p2 }

  static <R> R[p2] "do" _ (Ans<R> |- Void body scope for Variable<?, ?>) {
    Ans<R> ans = new Ans<R>();
    body.apply(ans);
    return ans.returnValue;
  }
}

dsl Ans <R> {
  void[ScopedDSL.p1] "ret" _ (R r) { returnValue = r; }

  <T, name: Identifier> void[ScopedDSL.p1] "let" name ":" T "=" _ (T t) activates Variable<T, name> {
    activate new Variable<T, name>(t);
  }

  Identifier[ScopedDSL.p0] _%"\\p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*" (String name) {
    return new Identifier(name);
  }

  void[ScopedDSL.p1] "block" _[ScopedDSL.p1] (Lazy |- Void body) { body.apply(new Lazy()); }

  R returnValue;
}

dsl Lazy {}

dsl Variable <T, name: Identifier> {
  Variable (T t) {
    this.t = t;
  }

  T[ScopedDSL.p0] name[ScopedDSL.p0] () { return t; }

  private T t;
}

class Identifier {
  public Identifier (String name) { this.name = name; }
  public String getName() { return name; }
  private String name;
}

