package lambda;

import java.util.function.*;

public dsl Lambda <T, name: Id> {
  priority p0, p1 { p0 < p1 }

  public static <T, R, name: Id> Function<T, R>[p0] "{" name ":" T "=>" _ "}" (Lambda<T, name> |- R body) {
    return new LambdaFunction <T, R, name> (body);
  }

  public static <T, R, name: Id> Function<T, R>[p0] "{" name "=>" _ "}" (Lambda<T, name> |- R body) {
    return new LambdaFunction <T, R, name> (body);
  }

  public static <T, name: Id> Predicate<T>[p0] "{" name ":" T "=>" _ "}" (Lambda<T, name> |- Boolean body) {
    return new LambdaPredicate <T, name> (body);
  }

  public static <T, name: Id> Predicate<T>[p0] "{" name "=>" _ "}" (Lambda<T, name> |- Boolean body) {
    return new LambdaPredicate <T, name> (body);
  }

  public static <T, U, R, n1: Id, n2: Id> BiFunction<T, U, R>[p0] "{" n1 "," n2 "=>" _ "}" (Lambda<T, n1> |- Lambda<U, n2> |- R body) {
    return new LambdaBiFunction <T, U, R, n1, n2> (body);
  }

  public static Id[p1] _%"\\p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*" (String name) {
    return new Id(name);
  }

  public Lambda (T value) { this.value = value; }

  public T[p1] name[p1] () { return value; }

  private T value;
}

class LambdaFunction <T, R, name: Id> implements Function<T, R> {
  public R apply (T t) { return f.apply(new Lambda<T, name>(t)); }

  public LambdaFunction (Function<Lambda<T, name>, R> f) {
    this.f = f;
  }

  private Function<Lambda<T, name>, R> f;
}

class LambdaPredicate <T, name: Id> implements Predicate<T> {
  public boolean test (T t) {
    return f.apply(new Lambda<T, name>(t)).booleanValue();
  }

  public LambdaPredicate (Function<Lambda<T, name>, Boolean> f) {
    this.f = f;
  }

  private Function<Lambda<T, name>, Boolean> f;
}

class LambdaBiFunction <T, U, R, n1: Id, n2: Id> implements BiFunction<T, U, R> {
  public R apply (T t, U u) { return f.apply(new Lambda<T, n1>(t)).apply(new Lambda<U, n2>(u)); }

  public LambdaBiFunction (Function<Lambda<T, n1>, Function<Lambda<U, n2>, R>> f) {
    this.f = f;
  }

  private Function<Lambda<T, n1>, Function<Lambda<U, n2>, R>> f;
}

class Id {
  public Id (String name) { this.name = name; }
  public String getName() { return name; }
  private String name;
}

